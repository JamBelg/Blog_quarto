{
  "hash": "df45fe8fdf45dc56f4206b0e98809054",
  "result": {
    "markdown": "---\ntitle: Gold origin\nauthor: Jamel Belgacem\ndate: 'November 30, 2022'\ncategories: [Data visualization]\nimage: \"gold.jpg\"\nformat:\n    html:\n        code-fold: true\n        code-tools: true\n        code-link: true\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(countrycode)\nlibrary(maps)\nlibrary(rworldmap)\nlibrary(tidygraph)\nlibrary(ggraph)\nlibrary(gridExtra)\nlibrary(DT)\nlibrary(htmlwidgets)\nlibrary(knitr)\nbg_color <- '#F2E7D5'\n```\n:::\n\n\nThe following code fetches a CSV file from my GitHub repository and loads it into a data frame called \"df\".\n\n::: {.cell}\n\n```{.r .cell-code}\n# Read data from github repository\nurl <- \"https://raw.githubusercontent.com/JamBelg/Gold-origin/main/data.csv\"\ndf <- read.csv(url, sep = ',', col.names=c('Flow','Year','Period','Tarif','key','text','Land','Quantity','Value'))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Data preparation\n\ndf_plot <- df %>%\n  filter(Period=='_Year', \n         Year==2021, \n         text=='mined gold (according to the \"Explanatory notes\")',\n         Land!=\"_ALL\") %>%\n  select(Land,Quantity,Value)\n\n\ndf_plot$Land <- as.character(df_plot$Land)\n\n# ISO Country code\ndf_plot[df_plot$Land=='Guiana, French',1] <- 'French Guiana'\ndf_plot[df_plot$Land=='USA',1] <- \"United States of America\"\ndf_plot[df_plot$Land==\"Côte d'Ivoire\",1] <- \"Ivory Coast\"\ndf_plot[df_plot$Land=='Tanzania',1] <- \"United Republic of Tanzania\"\ndf_plot[df_plot$Land=='Hong Kong',1] <- \"Hong Kong S.A.R.\"\ndf_plot <- df_plot %>%\n  mutate(Land=countryname(Land, destination='country.name.en'))\n```\n:::\n\n\nList of countries:\n\n::: {.cell}\n\n```{.r .cell-code}\nlevels(as.factor(df_plot$Land))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"Argentina\"           \"Australia\"           \"Azerbaijan\"         \n [4] \"Brazil\"              \"Burkina Faso\"        \"Canada\"             \n [7] \"Chile\"               \"Colombia\"            \"Côte d’Ivoire\"      \n[10] \"Dominican Republic\"  \"Ecuador\"             \"Finland\"            \n[13] \"France\"              \"French Guiana\"       \"Georgia\"            \n[16] \"Germany\"             \"Ghana\"               \"Guinea\"             \n[19] \"Guyana\"              \"Hong Kong SAR China\" \"Indonesia\"          \n[22] \"Kenya\"               \"Laos\"                \"Lebanon\"            \n[25] \"Liberia\"             \"Malaysia\"            \"Maldives\"           \n[28] \"Mali\"                \"Mexico\"              \"Mongolia\"           \n[31] \"Morocco\"             \"Nicaragua\"           \"Nigeria\"            \n[34] \"Norway\"              \"Oman\"                \"Panama\"             \n[37] \"Peru\"                \"Philippines\"         \"Russia\"             \n[40] \"Saudi Arabia\"        \"Senegal\"             \"South Africa\"       \n[43] \"Spain\"               \"Suriname\"            \"Sweden\"             \n[46] \"Tanzania\"            \"Thailand\"            \"United States\"      \n[49] \"Uruguay\"            \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# DT datatable\nhtmltools::tagList(datatable(df_plot))\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-0637040601ba2bd74f29\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-0637040601ba2bd74f29\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\"],[\"United States\",\"Uruguay\",\"Thailand\",\"Tanzania\",\"Sweden\",\"Suriname\",\"Spain\",\"South Africa\",\"Senegal\",\"Saudi Arabia\",\"Russia\",\"Philippines\",\"Peru\",\"Panama\",\"Oman\",\"Norway\",\"Nigeria\",\"Nicaragua\",\"Morocco\",\"Mongolia\",\"Mexico\",\"Mali\",\"Maldives\",\"Malaysia\",\"Liberia\",\"Lebanon\",\"Laos\",\"Kenya\",\"Indonesia\",\"Hong Kong SAR China\",\"Guyana\",\"Guinea\",\"French Guiana\",\"Ghana\",\"Germany\",\"Georgia\",\"France\",\"Finland\",\"Ecuador\",\"Dominican Republic\",\"Côte d’Ivoire\",\"Colombia\",\"Chile\",\"Canada\",\"Burkina Faso\",\"Brazil\",\"Azerbaijan\",\"Australia\",\"Argentina\"],[\"50'496\",\"19\",\"1'307\",\"14'129\",\"724\",\"19'682\",\"1'328\",\"888\",\"13'581\",\"10'556\",\"112\",\"12'337\",\"170'978\",\"430\",\"594\",\"100\",\"101\",\"18'199\",\"360\",\"20'016\",\"41'717\",\"24'953\",\"205\",\"40\",\"6'883\",\"104\",\"14'658\",\"247\",\"695\",\"366\",\"127\",\"4'698\",\"81\",\"46'092\",\"0\",\"2'152\",\"0\",\"8'175\",\"6'374\",\"60'613\",\"24'894\",\"5'393\",\"130'208\",\"39'686\",\"67'857\",\"20'752\",\"8'515\",\"43'519\",\"136'198\"],[\"2'161'324'447\",\"1'002'659\",\"71'441'103\",\"508'254'782\",\"33'788'039\",\"997'746'895\",\"30'049'482\",\"47'699'403\",\"649'117'803\",\"377'637'277\",\"6'336'182\",\"394'048'906\",\"1'688'745'446\",\"16'206'230\",\"675'180\",\"5'517'353\",\"5'062'358\",\"180'221'823\",\"14'738'826\",\"942'717'543\",\"626'629'009\",\"1'239'122'981\",\"3'529'284\",\"2'052'434\",\"313'038'060\",\"4'862'025\",\"107'238'155\",\"11'117'525\",\"36'198'012\",\"19'549'494\",\"6'488'884\",\"218'990'414\",\"4'174'080\",\"2'148'236'144\",\"1'691\",\"59'865'459\",\"1'019\",\"403'883'135\",\"240'029'250\",\"812'729'498\",\"778'107'567\",\"179'275'190\",\"695'521'440\",\"1'408'721'068\",\"3'087'492'200\",\"924'120'450\",\"180'455'597\",\"214'824'067\",\"692'652'967\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>Land<\\/th>\\n      <th>Quantity<\\/th>\\n      <th>Value<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n::: {#fig-charts .cell layout-ncol=\"1\"}\n\n```{.r .cell-code}\n# Longitude & Latitude\nlibrary(maps)\nlibrary(rworldmap)\nworld_map <- getMap()\nworldmap_df <- fortify(world_map)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRegions defined for each Polygons\n```\n:::\n\n```{.r .cell-code}\nworldmap_df <- worldmap_df %>%\n  left_join(.,y=df_plot,by=c(\"id\"=\"Land\"))\nworldmap_df <- worldmap_df %>%\n  mutate(color=ifelse(id=='Switzerland','#FFE15D',\n                      ifelse(id %in% df_plot$Land,\n                             ifelse(Quantity>100000,\"#8E3200\",\n                                    ifelse(Quantity>50000,\"#D1512D\",\n                                           ifelse(Quantity>10000,\"#D7A86E\",\"#FFEBC1\"))),\"White\")))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `color = ifelse(...)`.\nCaused by warning in `Ops.factor()`:\n! '>' not meaningful for factors\n```\n:::\n\n```{.r .cell-code}\n# Countries shape\ncountry_shapes <- geom_polygon(data=worldmap_df[worldmap_df$id!='Antarctica',], \n                               aes(long,lat,group=group, fill=color),\n                               show.legend=FALSE, colour='black')\n\n\nas_tibble(df_plot) %>%\n  select(Land, Quantity) %>%\n  arrange(desc(Quantity)) %>%\n  top_n(20) %>%\n  tableGrob(\n    rows=NULL,\n    cols = c(\"Country\",\"Quantity [kg]\"),\n    theme=ttheme_default(\n      base_size = 5,\n      core=list(\n        fg_params=list(\n          # fontfamily=font_rc,\n          col=c(rep(\"#8E3200\",3),rep(\"#D1512D\",3),rep(\"#D7A86E\",14)),\n          hjust=c(rep(0,20), rep(0.5,20)),\n          x=c(rep(0.05,20), rep(.5,20))\n        )\n      )\n    )\n  ) ->tbl\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nSelecting by Quantity\n```\n:::\n\n```{.r .cell-code}\nlibrary(gridExtra)\nlibrary(grid)\ntitle <- textGrob(expression(bold(underline(\"Top 20 (by quantity) Mining gold origin\"))),\n                  y=0.95,vjust=0.5, gp=gpar(fontsize=10, fontface='bold'))\n                                            \ngt <- gTree(children=gList(tbl,title))\n\n# Plot\nggplot()+\n  country_shapes+scale_fill_identity()+\n  coord_equal()+\n  theme_dark()+\n  theme(\n    # TITLE\n    plot.title.position = \"plot\",\n    plot.title = element_text(\n                              #family = title_font,\n                              face = \"bold\",\n                              color = \"black\",\n                              size = 20,\n                              lineheight = 1,\n                              hjust = 0.5,\n                              margin = margin(20,0,20,0)),\n    plot.subtitle = element_text(\n                                 #family = title_font,\n                                 face = \"bold\",\n                                 color = \"black\",\n                                 size = 15,\n                                 lineheight = 1,\n                                 hjust = 0.5),\n    # CAPTION\n    plot.caption=element_text(color=\"#393E46\",\n                              # family = title_font,\n                              size=12,\n                              hjust=1),\n    axis.text=element_blank(),\n    axis.title = element_blank()\n  )+\n  labs(\n    title=\"Origin of the mining gold refined in Switzerland\",\n    subtitle=\"Year 2021\",\n    caption=\"Source: Swiss federal office for customs and border security\"\n  )+\n  annotation_custom(gt, xmin = -50, xmax = 0, ymin = 50, ymax=0) #, xmin = -16920565, xmax = -14000000,  ymin=761378/2.25, ymax = 761378\n```\n\n::: {.cell-output-display}\n![Geo plot](Gold_origin_files/figure-html/fig-charts-1.png){#fig-charts width=672}\n:::\n\nCharts\n:::\n",
    "supporting": [
      "Gold_origin_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/htmlwidgets-1.6.2/htmlwidgets.js\"></script>\n<link href=\"../../site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/datatables-binding-0.28/datatables.js\"></script>\n<script src=\"../../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"../../site_libs/dt-core-1.13.4/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"../../site_libs/dt-core-1.13.4/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/dt-core-1.13.4/js/jquery.dataTables.min.js\"></script>\n<link href=\"../../site_libs/crosstalk-1.2.0/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/crosstalk-1.2.0/js/crosstalk.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}